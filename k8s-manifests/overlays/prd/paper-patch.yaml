apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lobby-paper-server
spec:
  template:
    spec:
      initContainers:
      - name: plugin-downloader
        image: alpine/curl:latest
        env:
        - name: MINIO_ENDPOINT
          value: "minio-service-prd:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-user
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-password
        - name: BUCKET_NAME
          value: "plugins"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
        command:
        - sh
        - -c
        - |
          echo "Downloading plugins from MinIO..."
          mkdir -p /plugins
          
          # Download mc (MinIO Client)
          wget -O /tmp/mc https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x /tmp/mc
          
          # Set MC config directory to writable location
          export MC_CONFIG_DIR=/tmp/.mc
          mkdir -p $MC_CONFIG_DIR
          
          # Configure MinIO connection
          /tmp/mc alias set minio http://${MINIO_ENDPOINT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
          
          # List buckets to verify connection
          echo "Available buckets:"
          /tmp/mc ls minio/
          
          # Download all plugins from bucket
          echo "Downloading from bucket: ${BUCKET_NAME}"
          /tmp/mc cp --recursive minio/${BUCKET_NAME}/ /plugins/ || echo "No files in bucket or bucket not found"
          
          echo "Plugin download completed"
          ls -la /plugins
      containers:
      - name: paper
        env:
        - name: MEMORY
          value: "1G"
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "2Gi"
        env:
        - name: COPY_PLUGINS_SRC
          value: "/plugins"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
      volumes:
      - name: plugins-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: survival-paper-server
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "k8s-wk-4"
                - "k8s-wk-5"
          - weight: 50
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "k8s-wk-1"
                - "k8s-wk-2"
                - "k8s-wk-3"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: lobby-paper-server
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: plugin-downloader
        image: alpine/curl:latest
        env:
        - name: MINIO_ENDPOINT
          value: "minio-service-prd:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-user
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-password
        - name: BUCKET_NAME
          value: "plugins"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
        command:
        - sh
        - -c
        - |
          echo "Downloading plugins from MinIO..."
          mkdir -p /plugins
          
          # Download mc (MinIO Client)
          wget -O /tmp/mc https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x /tmp/mc
          
          # Set MC config directory to writable location
          export MC_CONFIG_DIR=/tmp/.mc
          mkdir -p $MC_CONFIG_DIR
          
          # Configure MinIO connection
          /tmp/mc alias set minio http://${MINIO_ENDPOINT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
          
          # List buckets to verify connection
          echo "Available buckets:"
          /tmp/mc ls minio/
          
          # Download all plugins from bucket
          echo "Downloading from bucket: ${BUCKET_NAME}"
          /tmp/mc cp --recursive minio/${BUCKET_NAME}/ /plugins/ || echo "No files in bucket or bucket not found"
          
          echo "Plugin download completed"
          ls -la /plugins
      containers:
      - name: paper
        env:
        - name: MEMORY
          value: "6G"
        - name: JVM_XX_OPTS
          value: "-XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1"
        - name: COPY_PLUGINS_SRC
          value: "/plugins"
        resources:
          requests:
            cpu: "2"
            memory: "6Gi"
          limits:
            cpu: "8"
            memory: "8Gi"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
      volumes:
      - name: plugins-volume
        emptyDir: {}