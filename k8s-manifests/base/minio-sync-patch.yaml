apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lobby-paper-server
spec:
  template:
    spec:
      containers:
      - name: minio-sync
        image: minio/mc:RELEASE.2025-07-21T05-28-08Z-cpuv1
        env:
        - name: MINIO_ENDPOINT
          value: "MINIO_ENDPOINT_PLACEHOLDER"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-user
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-password
        - name: BUCKET_NAME
          value: "plugins"
        - name: MC_CONFIG_DIR
          value: "/tmp/.mc"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
        - name: minio-config
          mountPath: /tmp/.mc
        command:
        - sh
        - -c
        - |
          echo "Starting MinIO real-time bidirectional sync..."
          
          # Configure MinIO connection
          mc alias set minio http://${MINIO_ENDPOINT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
          
          # Ensure bucket exists
          mc mb minio/${BUCKET_NAME} --ignore-existing
          
          # Create sync directories
          mkdir -p /plugins
          
          echo "Initial sync from MinIO to local..."
          mc mirror minio/${BUCKET_NAME}/ /plugins/ --remove --overwrite
          
          echo "Starting real-time sync from MinIO to local (watch mode)..."
          mc mirror minio/${BUCKET_NAME}/ /plugins/ --watch --remove --overwrite &
          DOWNLOAD_PID=$!
          
          echo "Starting real-time sync from local to MinIO (watch mode)..."
          mc mirror /plugins/ minio/${BUCKET_NAME}/ --watch --remove --overwrite &
          UPLOAD_PID=$!
          
          echo "Both sync processes started. PIDs: download=$DOWNLOAD_PID, upload=$UPLOAD_PID"
          
          # Wait for both processes
          wait $DOWNLOAD_PID $UPLOAD_PID
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
      volumes:
      - name: minio-config
        emptyDir: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: survival-paper-server
spec:
  template:
    spec:
      containers:
      - name: minio-sync
        image: minio/mc:RELEASE.2025-07-21T05-28-08Z-cpuv1
        env:
        - name: MINIO_ENDPOINT
          value: "MINIO_ENDPOINT_PLACEHOLDER"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-user
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: root-password
        - name: BUCKET_NAME
          value: "plugins"
        - name: MC_CONFIG_DIR
          value: "/tmp/.mc"
        volumeMounts:
        - name: plugins-volume
          mountPath: /plugins
        - name: minio-config
          mountPath: /tmp/.mc
        command:
        - sh
        - -c
        - |
          echo "Starting MinIO real-time bidirectional sync..."
          
          # Configure MinIO connection
          mc alias set minio http://${MINIO_ENDPOINT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
          
          # Ensure bucket exists
          mc mb minio/${BUCKET_NAME} --ignore-existing
          
          # Create sync directories
          mkdir -p /plugins
          
          echo "Initial sync from MinIO to local..."
          mc mirror minio/${BUCKET_NAME}/ /plugins/ --remove --overwrite
          
          echo "Starting real-time sync from MinIO to local (watch mode)..."
          mc mirror minio/${BUCKET_NAME}/ /plugins/ --watch --remove --overwrite &
          DOWNLOAD_PID=$!
          
          echo "Starting real-time sync from local to MinIO (watch mode)..."
          mc mirror /plugins/ minio/${BUCKET_NAME}/ --watch --remove --overwrite &
          UPLOAD_PID=$!
          
          echo "Both sync processes started. PIDs: download=$DOWNLOAD_PID, upload=$UPLOAD_PID"
          
          # Wait for both processes
          wait $DOWNLOAD_PID $UPLOAD_PID
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
      volumes:
      - name: minio-config
        emptyDir: {}